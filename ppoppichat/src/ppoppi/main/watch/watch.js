import './watch.scss'
import firebase from "firebase/app"
//when connected to this url
//fetch from firebase 
//import placeholderPicture from './unknown.png'
import { useDocument } from 'react-firebase-hooks/firestore';
import { joinVideoroom } from '../../firebaseFunctions'
import {
    useParams
} from "react-router-dom";

import React from 'react'

import { SmallModal } from './customModal'
import { VideoPlayer } from './videoplayer';
import { VideoMembers } from './videomembers';
import { VideoQueue } from './videoqueue';

const membersDivider = (
    <svg width="240" height="24" viewBox="0 0 240 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3.816 10.2681C4.38 9.41614 5.058 8.99014 5.85 8.99014C7.074 8.99014 7.986 9.51214 8.586 10.5561C8.718 10.3761 8.874 10.1901 9.054 9.99814C9.246 9.79414 9.546 9.57814 9.954 9.35014C10.362 9.11014 10.782 8.99014 11.214 8.99014C12.174 8.99014 12.978 9.36214 13.626 10.1061C14.274 10.8381 14.598 12.0561 14.598 13.7601V16.9101C14.598 17.1861 14.586 17.3961 14.562 17.5401C14.55 17.6721 14.496 17.8281 14.4 18.0081C14.244 18.3321 13.782 18.4941 13.014 18.4941C12.258 18.4941 11.796 18.3261 11.628 17.9901C11.544 17.8101 11.49 17.6541 11.466 17.5221C11.454 17.3781 11.448 17.1681 11.448 16.8921V13.7421C11.448 12.6981 11.076 12.1761 10.332 12.1761C9.912 12.1761 9.624 12.3141 9.468 12.5901C9.324 12.8661 9.252 13.2561 9.252 13.7601V16.9101C9.252 17.1981 9.24 17.4081 9.216 17.5401C9.204 17.6721 9.15 17.8281 9.054 18.0081C8.886 18.3321 8.418 18.4941 7.65 18.4941C6.894 18.4941 6.432 18.3261 6.264 17.9901C6.18 17.8101 6.126 17.6541 6.102 17.5221C6.09 17.3781 6.084 17.1681 6.084 16.8921V13.7421C6.084 12.6981 5.712 12.1761 4.968 12.1761C4.248 12.1761 3.888 12.6981 3.888 13.7421V16.9281C3.888 17.2041 3.876 17.4141 3.852 17.5581C3.84 17.6901 3.786 17.8461 3.69 18.0261C3.51 18.3381 3.042 18.4941 2.286 18.4941C1.53 18.4941 1.068 18.3321 0.9 18.0081C0.816 17.8281 0.762 17.6721 0.738 17.5401C0.726 17.4081 0.72 17.1981 0.72 16.9101V10.5741C0.72 10.2981 0.726 10.0941 0.738 9.96214C0.762 9.81814 0.822 9.66214 0.918 9.49414C1.098 9.17014 1.524 9.00814 2.196 9.00814C2.868 9.00814 3.306 9.11614 3.51 9.33214C3.714 9.54814 3.816 9.86014 3.816 10.2681ZM25.2645 12.6261C25.2645 13.3581 25.0785 13.9041 24.7065 14.2641C24.3465 14.6121 23.9445 14.7861 23.5005 14.7861H19.2345C19.2345 15.1221 19.4325 15.4041 19.8285 15.6321C20.2245 15.8601 20.6205 15.9741 21.0165 15.9741C21.7125 15.9741 22.2585 15.9021 22.6545 15.7581L22.8525 15.6861C23.1405 15.5541 23.3805 15.4881 23.5725 15.4881C23.9565 15.4881 24.2865 15.7581 24.5625 16.2981C24.7185 16.6221 24.7965 16.8981 24.7965 17.1261C24.7965 18.1941 23.5185 18.7281 20.9625 18.7281C20.0745 18.7281 19.2825 18.5781 18.5865 18.2781C17.9025 17.9661 17.3685 17.5581 16.9845 17.0541C16.2285 16.0821 15.8505 14.9961 15.8505 13.7961C15.8505 12.2841 16.3365 11.0781 17.3085 10.1781C18.2925 9.26614 19.5165 8.81014 20.9805 8.81014C22.6485 8.81014 23.8725 9.39814 24.6525 10.5741C25.0605 11.1981 25.2645 11.8821 25.2645 12.6261ZM21.4665 13.1481C21.9225 13.1481 22.1505 12.9561 22.1505 12.5721C22.1505 12.2961 22.0425 12.0741 21.8265 11.9061C21.6225 11.7381 21.3225 11.6541 20.9265 11.6541C20.5425 11.6541 20.1585 11.8161 19.7745 12.1401C19.3905 12.4521 19.1985 12.7881 19.1985 13.1481H21.4665ZM29.6249 10.2681C30.1889 9.41614 30.8669 8.99014 31.6589 8.99014C32.8829 8.99014 33.7949 9.51214 34.3949 10.5561C34.5269 10.3761 34.6829 10.1901 34.8629 9.99814C35.0549 9.79414 35.3549 9.57814 35.7629 9.35014C36.1709 9.11014 36.5909 8.99014 37.0229 8.99014C37.9829 8.99014 38.7869 9.36214 39.4349 10.1061C40.0829 10.8381 40.4069 12.0561 40.4069 13.7601V16.9101C40.4069 17.1861 40.3949 17.3961 40.3709 17.5401C40.3589 17.6721 40.3049 17.8281 40.2089 18.0081C40.0529 18.3321 39.5909 18.4941 38.8229 18.4941C38.0669 18.4941 37.6049 18.3261 37.4369 17.9901C37.3529 17.8101 37.2989 17.6541 37.2749 17.5221C37.2629 17.3781 37.2569 17.1681 37.2569 16.8921V13.7421C37.2569 12.6981 36.8849 12.1761 36.1409 12.1761C35.7209 12.1761 35.4329 12.3141 35.2769 12.5901C35.1329 12.8661 35.0609 13.2561 35.0609 13.7601V16.9101C35.0609 17.1981 35.0489 17.4081 35.0249 17.5401C35.0129 17.6721 34.9589 17.8281 34.8629 18.0081C34.6949 18.3321 34.2269 18.4941 33.4589 18.4941C32.7029 18.4941 32.2409 18.3261 32.0729 17.9901C31.9889 17.8101 31.9349 17.6541 31.9109 17.5221C31.8989 17.3781 31.8929 17.1681 31.8929 16.8921V13.7421C31.8929 12.6981 31.5209 12.1761 30.7769 12.1761C30.0569 12.1761 29.6969 12.6981 29.6969 13.7421V16.9281C29.6969 17.2041 29.6849 17.4141 29.6609 17.5581C29.6489 17.6901 29.5949 17.8461 29.4989 18.0261C29.3189 18.3381 28.8509 18.4941 28.0949 18.4941C27.3389 18.4941 26.8769 18.3321 26.7089 18.0081C26.6249 17.8281 26.5709 17.6721 26.5469 17.5401C26.5349 17.4081 26.5289 17.1981 26.5289 16.9101V10.5741C26.5289 10.2981 26.5349 10.0941 26.5469 9.96214C26.5709 9.81814 26.6309 9.66214 26.7269 9.49414C26.9069 9.17014 27.3329 9.00814 28.0049 9.00814C28.6769 9.00814 29.1149 9.11614 29.3189 9.33214C29.5229 9.54814 29.6249 9.86014 29.6249 10.2681ZM47.1315 9.02614C48.1995 9.02614 49.1775 9.50014 50.0655 10.4481C50.9655 11.3961 51.4155 12.5001 51.4155 13.7601C51.4155 15.0081 50.9715 16.1061 50.0835 17.0541C49.1955 17.9901 48.2415 18.4581 47.2215 18.4581C46.2015 18.4581 45.4755 18.1701 45.0435 17.5941C44.9475 18.1821 44.4315 18.4761 43.4955 18.4761C42.7395 18.4761 42.2775 18.3141 42.1095 17.9901C42.0255 17.8101 41.9715 17.6541 41.9475 17.5221C41.9355 17.3781 41.9295 17.1681 41.9295 16.8921V6.14614C41.9295 5.87014 41.9355 5.66614 41.9475 5.53414C41.9715 5.39014 42.0255 5.23414 42.1095 5.06614C42.2775 4.74214 42.7455 4.58014 43.5135 4.58014C44.2695 4.58014 44.7255 4.74214 44.8815 5.06614C44.9775 5.24614 45.0315 5.40814 45.0435 5.55214C45.0675 5.68414 45.0795 5.88814 45.0795 6.16414V9.90814C45.5595 9.32014 46.2435 9.02614 47.1315 9.02614ZM45.5475 14.8401C45.8475 15.1641 46.2195 15.3261 46.6635 15.3261C47.1075 15.3261 47.4855 15.1641 47.7975 14.8401C48.1095 14.5161 48.2655 14.1561 48.2655 13.7601C48.2655 13.3641 48.1215 13.0041 47.8335 12.6801C47.5455 12.3441 47.1615 12.1761 46.6815 12.1761C46.2015 12.1761 45.8175 12.3441 45.5295 12.6801C45.2535 13.0161 45.1155 13.3821 45.1155 13.7781C45.1155 14.1621 45.2595 14.5161 45.5475 14.8401ZM61.8158 12.6261C61.8158 13.3581 61.6298 13.9041 61.2578 14.2641C60.8978 14.6121 60.4958 14.7861 60.0518 14.7861H55.7858C55.7858 15.1221 55.9838 15.4041 56.3798 15.6321C56.7758 15.8601 57.1718 15.9741 57.5678 15.9741C58.2638 15.9741 58.8098 15.9021 59.2058 15.7581L59.4038 15.6861C59.6918 15.5541 59.9318 15.4881 60.1238 15.4881C60.5078 15.4881 60.8378 15.7581 61.1138 16.2981C61.2698 16.6221 61.3478 16.8981 61.3478 17.1261C61.3478 18.1941 60.0698 18.7281 57.5138 18.7281C56.6258 18.7281 55.8338 18.5781 55.1378 18.2781C54.4538 17.9661 53.9198 17.5581 53.5358 17.0541C52.7798 16.0821 52.4018 14.9961 52.4018 13.7961C52.4018 12.2841 52.8878 11.0781 53.8598 10.1781C54.8438 9.26614 56.0678 8.81014 57.5318 8.81014C59.1998 8.81014 60.4238 9.39814 61.2038 10.5741C61.6118 11.1981 61.8158 11.8821 61.8158 12.6261ZM58.0178 13.1481C58.4738 13.1481 58.7018 12.9561 58.7018 12.5721C58.7018 12.2961 58.5938 12.0741 58.3778 11.9061C58.1738 11.7381 57.8738 11.6541 57.4778 11.6541C57.0938 11.6541 56.7098 11.8161 56.3258 12.1401C55.9418 12.4521 55.7498 12.7881 55.7498 13.1481H58.0178ZM69.5242 9.11614C69.7522 9.18814 69.9382 9.31414 70.0822 9.49414C70.2382 9.66214 70.3162 9.93814 70.3162 10.3221C70.3162 10.7061 70.2022 11.1261 69.9742 11.5821C69.7462 12.0381 69.4162 12.2661 68.9842 12.2661C68.7682 12.2661 68.5582 12.2181 68.3542 12.1221C68.1622 12.0261 67.9042 11.9781 67.5802 11.9781C67.2562 11.9781 66.9502 12.0921 66.6622 12.3201C66.3862 12.5481 66.2482 12.8241 66.2482 13.1481V16.9281C66.2482 17.2041 66.2362 17.4141 66.2122 17.5581C66.2002 17.6901 66.1462 17.8461 66.0502 18.0261C65.8702 18.3381 65.4022 18.4941 64.6462 18.4941C64.0702 18.4941 63.6562 18.3921 63.4042 18.1881C63.2122 18.0201 63.1042 17.7621 63.0802 17.4141C63.0802 17.2941 63.0802 17.1201 63.0802 16.8921V10.5741C63.0802 10.2981 63.0862 10.0941 63.0982 9.96214C63.1222 9.81814 63.1762 9.66214 63.2602 9.49414C63.4282 9.17014 63.8962 9.00814 64.6642 9.00814C65.3842 9.00814 65.8342 9.14614 66.0142 9.42214C66.1462 9.61414 66.2122 9.81214 66.2122 10.0161C66.2722 9.93214 66.3562 9.83014 66.4642 9.71014C66.5842 9.59014 66.8302 9.42814 67.2022 9.22414C67.5742 9.02014 67.8982 8.91814 68.1742 8.91814C68.4622 8.91814 68.7022 8.93614 68.8942 8.97214C69.0862 8.99614 69.2962 9.04414 69.5242 9.11614ZM71.1172 17.6481C70.8892 17.5041 70.7752 17.2761 70.7752 16.9641C70.7752 16.6521 71.0032 16.1781 71.4592 15.5421C71.5912 15.3381 71.8012 15.2361 72.0892 15.2361C72.3892 15.2361 72.7912 15.3861 73.2952 15.6861C73.7992 15.9741 74.2552 16.1181 74.6632 16.1181C75.3952 16.1181 75.7612 15.9741 75.7612 15.6861C75.7612 15.4581 75.3592 15.2901 74.5552 15.1821C73.7992 15.0741 73.0492 14.7921 72.3052 14.3361C71.9572 14.1201 71.6692 13.7841 71.4412 13.3281C71.2132 12.8601 71.0992 12.3081 71.0992 11.6721C71.0992 9.77614 72.4012 8.82814 75.0052 8.82814C75.8572 8.82814 76.7332 9.03214 77.6332 9.44014C78.0532 9.63214 78.2632 9.87214 78.2632 10.1601C78.2632 10.4481 78.1312 10.8021 77.8672 11.2221C77.6032 11.6421 77.3332 11.8521 77.0572 11.8521C76.9132 11.8521 76.6432 11.7621 76.2472 11.5821C75.8632 11.4021 75.4432 11.3121 74.9872 11.3121C74.2792 11.3121 73.9252 11.4441 73.9252 11.7081C73.9252 12.0681 74.3332 12.3021 75.1492 12.4101C75.9412 12.4941 76.7092 12.7221 77.4532 13.0941C77.8012 13.2621 78.0892 13.5561 78.3172 13.9761C78.5572 14.3841 78.6772 14.9001 78.6772 15.5241C78.6772 16.1481 78.5572 16.6821 78.3172 17.1261C78.0892 17.5581 77.7652 17.8821 77.3452 18.0981C76.5772 18.4701 75.6112 18.6561 74.4472 18.6561C73.2952 18.6561 72.1852 18.3201 71.1172 17.6481Z" fill="black" />
        <path d="M89 14.5667H239.5" stroke="black" />
    </svg>
)
const queueDivider = (
    <svg width="240" height="23" viewBox="0 0 240 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M6.696 9.468C6.768 8.832 7.236 8.514 8.1 8.514C8.556 8.514 8.892 8.55 9.108 8.622C9.324 8.694 9.474 8.82 9.558 9C9.654 9.168 9.708 9.318 9.72 9.45C9.744 9.582 9.756 9.786 9.756 10.062V20.574C9.756 20.85 9.744 21.054 9.72 21.186C9.708 21.318 9.654 21.468 9.558 21.636C9.474 21.804 9.318 21.924 9.09 21.996C8.874 22.068 8.58 22.104 8.208 22.104C7.836 22.104 7.542 22.068 7.326 21.996C7.11 21.924 6.954 21.798 6.858 21.618C6.774 21.45 6.72 21.3 6.696 21.168C6.684 21.036 6.678 20.832 6.678 20.556V16.92C6.198 17.472 5.52 17.748 4.644 17.748C3.576 17.748 2.61 17.286 1.746 16.362C0.882 15.438 0.45 14.364 0.45 13.14C0.45 11.916 0.888 10.842 1.764 9.918C2.64 8.994 3.564 8.532 4.536 8.532C5.52 8.532 6.24 8.844 6.696 9.468ZM3.978 14.22C4.29 14.532 4.662 14.688 5.094 14.688C5.526 14.688 5.886 14.532 6.174 14.22C6.462 13.896 6.606 13.548 6.606 13.176C6.606 12.792 6.468 12.438 6.192 12.114C5.916 11.778 5.544 11.61 5.076 11.61C4.62 11.61 4.248 11.772 3.96 12.096C3.672 12.408 3.528 12.762 3.528 13.158C3.528 13.554 3.678 13.908 3.978 14.22ZM15.4986 17.964C14.2866 17.964 13.2786 17.508 12.4746 16.596C11.6826 15.672 11.2866 14.55 11.2866 13.23V10.08C11.2866 9.792 11.2926 9.582 11.3046 9.45C11.3286 9.318 11.3826 9.162 11.4666 8.982C11.6346 8.658 12.1026 8.496 12.8706 8.496C13.7106 8.496 14.2026 8.724 14.3466 9.18C14.4186 9.372 14.4546 9.678 14.4546 10.098V13.248C14.4546 13.74 14.5926 14.124 14.8686 14.4C15.1566 14.676 15.5346 14.814 16.0026 14.814C16.4826 14.814 16.8666 14.67 17.1546 14.382C17.4546 14.094 17.6046 13.716 17.6046 13.248V10.062C17.6046 9.786 17.6106 9.582 17.6226 9.45C17.6466 9.306 17.7066 9.144 17.8026 8.964C17.9586 8.652 18.4206 8.496 19.1886 8.496C19.9446 8.496 20.4066 8.658 20.5746 8.982C20.6586 9.162 20.7066 9.324 20.7186 9.468C20.7426 9.6 20.7546 9.804 20.7546 10.08V16.452C20.7546 16.716 20.7426 16.92 20.7186 17.064C20.7066 17.196 20.6526 17.346 20.5566 17.514C20.3766 17.826 19.9146 17.982 19.1706 17.982C18.4386 17.982 17.9886 17.838 17.8206 17.55C17.7006 17.346 17.6406 17.1 17.6406 16.812C17.5926 16.896 17.4846 17.016 17.3166 17.172C17.1486 17.328 16.9866 17.46 16.8306 17.568C16.4226 17.832 15.9786 17.964 15.4986 17.964ZM31.4366 12.132C31.4366 12.864 31.2506 13.41 30.8786 13.77C30.5186 14.118 30.1166 14.292 29.6726 14.292H25.4066C25.4066 14.628 25.6046 14.91 26.0006 15.138C26.3966 15.366 26.7926 15.48 27.1886 15.48C27.8846 15.48 28.4306 15.408 28.8266 15.264L29.0246 15.192C29.3126 15.06 29.5526 14.994 29.7446 14.994C30.1286 14.994 30.4586 15.264 30.7346 15.804C30.8906 16.128 30.9686 16.404 30.9686 16.632C30.9686 17.7 29.6906 18.234 27.1346 18.234C26.2466 18.234 25.4546 18.084 24.7586 17.784C24.0746 17.472 23.5406 17.064 23.1566 16.56C22.4006 15.588 22.0226 14.502 22.0226 13.302C22.0226 11.79 22.5086 10.584 23.4806 9.684C24.4646 8.772 25.6886 8.316 27.1526 8.316C28.8206 8.316 30.0446 8.904 30.8246 10.08C31.2326 10.704 31.4366 11.388 31.4366 12.132ZM27.6386 12.654C28.0946 12.654 28.3226 12.462 28.3226 12.078C28.3226 11.802 28.2146 11.58 27.9986 11.412C27.7946 11.244 27.4946 11.16 27.0986 11.16C26.7146 11.16 26.3306 11.322 25.9466 11.646C25.5626 11.958 25.3706 12.294 25.3706 12.654H27.6386ZM36.9129 17.964C35.7009 17.964 34.6929 17.508 33.8889 16.596C33.0969 15.672 32.7009 14.55 32.7009 13.23V10.08C32.7009 9.792 32.7069 9.582 32.7189 9.45C32.7429 9.318 32.7969 9.162 32.8809 8.982C33.0489 8.658 33.5169 8.496 34.2849 8.496C35.1249 8.496 35.6169 8.724 35.7609 9.18C35.8329 9.372 35.8689 9.678 35.8689 10.098V13.248C35.8689 13.74 36.0069 14.124 36.2829 14.4C36.5709 14.676 36.9489 14.814 37.4169 14.814C37.8969 14.814 38.2809 14.67 38.5689 14.382C38.8689 14.094 39.0189 13.716 39.0189 13.248V10.062C39.0189 9.786 39.0249 9.582 39.0369 9.45C39.0609 9.306 39.1209 9.144 39.2169 8.964C39.3729 8.652 39.8349 8.496 40.6029 8.496C41.3589 8.496 41.8209 8.658 41.9889 8.982C42.0729 9.162 42.1209 9.324 42.1329 9.468C42.1569 9.6 42.1689 9.804 42.1689 10.08V16.452C42.1689 16.716 42.1569 16.92 42.1329 17.064C42.1209 17.196 42.0669 17.346 41.9709 17.514C41.7909 17.826 41.3289 17.982 40.5849 17.982C39.8529 17.982 39.4029 17.838 39.2349 17.55C39.1149 17.346 39.0549 17.1 39.0549 16.812C39.0069 16.896 38.8989 17.016 38.7309 17.172C38.5629 17.328 38.4009 17.46 38.2449 17.568C37.8369 17.832 37.3929 17.964 36.9129 17.964ZM52.851 12.132C52.851 12.864 52.665 13.41 52.293 13.77C51.933 14.118 51.531 14.292 51.087 14.292H46.821C46.821 14.628 47.019 14.91 47.415 15.138C47.811 15.366 48.207 15.48 48.603 15.48C49.299 15.48 49.845 15.408 50.241 15.264L50.439 15.192C50.727 15.06 50.967 14.994 51.159 14.994C51.543 14.994 51.873 15.264 52.149 15.804C52.305 16.128 52.383 16.404 52.383 16.632C52.383 17.7 51.105 18.234 48.549 18.234C47.661 18.234 46.869 18.084 46.173 17.784C45.489 17.472 44.955 17.064 44.571 16.56C43.815 15.588 43.437 14.502 43.437 13.302C43.437 11.79 43.923 10.584 44.895 9.684C45.879 8.772 47.103 8.316 48.567 8.316C50.235 8.316 51.459 8.904 52.239 10.08C52.647 10.704 52.851 11.388 52.851 12.132ZM49.053 12.654C49.509 12.654 49.737 12.462 49.737 12.078C49.737 11.802 49.629 11.58 49.413 11.412C49.209 11.244 48.909 11.16 48.513 11.16C48.129 11.16 47.745 11.322 47.361 11.646C46.977 11.958 46.785 12.294 46.785 12.654H49.053Z" fill="black" />
        <line x1="60" y1="13.5" x2="240" y2="13.5" stroke="black" />
    </svg>

)



function PlusSvg(props) {
    //console.log(props.modalKey)
    const [modalIsOpen, setIsOpen] = React.useState(false);

    function handleClick(e) {
        if (!modalIsOpen) {
            //if modal is not open/ set to open
            setIsOpen(!modalIsOpen)
        }
        //console.log(e)
    }

    function closeModal() {
        setIsOpen(false)
    }



    return (
        <div className='sidebar-add-button'
            onClick={handleClick}

        >
            <SmallModal
                modalIsOpen={modalIsOpen}
                closeModal={closeModal}
                userData={props.userData}
                modalKey={props.modalKey}
            />
            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path className='add-path' d="M15 9H3" strokeWidth="3" strokeLinecap="round" />
                <path className='add-path' d="M9 3V9V15" strokeWidth="3" strokeLinecap="round" />
            </svg>
        </div>
    )
}


function Watch(props) {
    let { videoRoom } = useParams();
    //console.log(videoRoom)
    //set a listener for watchroom

    const [value, loading, error] = useDocument(
        firebase.firestore().doc('videorooms/' + videoRoom)
    );

    console.log('watch room updated')

    if (value) {
        if (value.exists) {
            console.log('join room start')
            joinVideoroom(props[0].userData, value.id)
            return (
                <div id='watch-inner'>


                    <div className='video-room-sidebar'>
                        <div className='title-wrapper'> {value.data().roomName}</div>
                        <div className='members-wrapper'>
                            <div className='members-divider video-room-sidebar-divider'>
                                {membersDivider}
                                {
                                    <PlusSvg modalKey='members' userData={props[0].userData} />
                                }
                            </div>
                            <div className='members-list'>

                                <VideoMembers
                                    videoroomID={videoRoom}
                                />

                            </div>
                        </div>
                        <div className='queue-wrapper'>
                            <div className='queue-divider video-room-sidebar-divider'>
                                {queueDivider}
                                {<PlusSvg modalKey='queue' userData={props[0].userData} />}
                            </div>
                            <div className='queue-list'>

                                <VideoQueue
                                    videoroomID={videoRoom}
                                />

                            </div>
                        </div>
                    </div>
                    <div className='video-room-media-wrapper'>
                        <VideoPlayer />
                    </div>
                </div >
            )
        } else {
            return (<div>err video room does not exist</div>)
        }
    } else if (loading) {
        return (<span>Loading...</span>)
    } else if (error) {
        return (<strong>Error: {JSON.stringify(error)}</strong>)
    } else {
        console.log('watch called value not set')
        return (<div>uwu</div>)
    }
}

export { Watch }

